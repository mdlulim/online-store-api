// <auto-generated />
using System;
using DotNetCore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCore.API.Migrations
{
    [DbContext(typeof(OnlineStoreDbContext))]
    [Migration("20240523192825_AddExtraFieldsOnProduct")]
    partial class AddExtraFieldsOnProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SuppierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd634cd7-c855-4a3a-bcc4-f7c1247566c0"),
                            Code = "GP",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9539),
                            Description = "Gauteng Province",
                            Name = "Gauteng",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9544)
                        },
                        new
                        {
                            Id = new Guid("5d702b3c-68d5-4fc7-ab3b-016e1bb80c08"),
                            Code = "GP",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9550),
                            Description = "KwaZulu-Natal",
                            Name = "KwaZulu-Natal",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9550)
                        },
                        new
                        {
                            Id = new Guid("1b5e4d54-0042-46ad-8324-99948f886b99"),
                            Code = "EC",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9552),
                            Description = "Eastern Cape",
                            Name = "Eastern Cape",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9552)
                        },
                        new
                        {
                            Id = new Guid("72caccf4-cd44-4684-9768-2b8f86b6666b"),
                            Code = "FS",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9554),
                            Description = "Free State",
                            Name = "Free State",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9554)
                        },
                        new
                        {
                            Id = new Guid("f5eb077e-aa22-44b0-897b-b58a1b279573"),
                            Code = "LP",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9555),
                            Description = "Limpopo",
                            Name = "Limpopo",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9556)
                        },
                        new
                        {
                            Id = new Guid("cdc8d7fa-61b1-4e9e-ba0b-e1e5002d5a9a"),
                            Code = "MP",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9557),
                            Description = "Mpumalanga",
                            Name = "Mpumalanga",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9557)
                        },
                        new
                        {
                            Id = new Guid("f7058303-095f-4d35-9d35-fe6248445746"),
                            Code = "NW",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9585),
                            Description = "North West",
                            Name = "North West",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9585)
                        },
                        new
                        {
                            Id = new Guid("dfef6e13-3902-40af-8d3d-a7508aec8141"),
                            Code = "NC",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9587),
                            Description = "Northern Cape",
                            Name = "Northern Cape",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9587)
                        },
                        new
                        {
                            Id = new Guid("48c98496-9e0c-4017-801e-b2baf497d352"),
                            Code = "WC",
                            CreatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9588),
                            Description = "Western Cape",
                            Name = "Western Cape",
                            UpdatedDate = new DateTime(2024, 5, 23, 19, 28, 24, 725, DateTimeKind.Utc).AddTicks(9589)
                        });
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Product", b =>
                {
                    b.HasOne("DotNetCore.API.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}

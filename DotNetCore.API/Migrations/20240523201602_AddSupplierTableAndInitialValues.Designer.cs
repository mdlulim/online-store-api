// <auto-generated />
using System;
using DotNetCore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCore.API.Migrations
{
    [DbContext(typeof(OnlineStoreDbContext))]
    [Migration("20240523201602_AddSupplierTableAndInitialValues")]
    partial class AddSupplierTableAndInitialValues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SuppierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e43d2da-85ee-4f05-9847-7b07cc5e0719"),
                            Code = "GP",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8392),
                            Description = "Gauteng Province",
                            Name = "Gauteng",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8393)
                        },
                        new
                        {
                            Id = new Guid("d42863e6-238b-4c7a-a556-3a4bf4d31a6f"),
                            Code = "GP",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8395),
                            Description = "KwaZulu-Natal",
                            Name = "KwaZulu-Natal",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8395)
                        },
                        new
                        {
                            Id = new Guid("13d510fc-80ed-43f0-9601-d0d88d092e39"),
                            Code = "EC",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8418),
                            Description = "Eastern Cape",
                            Name = "Eastern Cape",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8419)
                        },
                        new
                        {
                            Id = new Guid("9ca66e8a-ade1-415d-b008-05f792038fd6"),
                            Code = "FS",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8420),
                            Description = "Free State",
                            Name = "Free State",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8421)
                        },
                        new
                        {
                            Id = new Guid("496aa535-e342-4c25-a37b-f0288a5507a4"),
                            Code = "LP",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8422),
                            Description = "Limpopo",
                            Name = "Limpopo",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8422)
                        },
                        new
                        {
                            Id = new Guid("f1c7c74e-a72f-4fc0-bd62-87e41940056a"),
                            Code = "MP",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8423),
                            Description = "Mpumalanga",
                            Name = "Mpumalanga",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8423)
                        },
                        new
                        {
                            Id = new Guid("480165f1-9781-4e8d-b90c-0253ea900fd2"),
                            Code = "NW",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8425),
                            Description = "North West",
                            Name = "North West",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8425)
                        },
                        new
                        {
                            Id = new Guid("c3a1c7bb-f832-415e-acd7-d0b2654ea868"),
                            Code = "NC",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8426),
                            Description = "Northern Cape",
                            Name = "Northern Cape",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8426)
                        },
                        new
                        {
                            Id = new Guid("455268eb-3cc5-434c-9771-a64d8343507a"),
                            Code = "WC",
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8450),
                            Description = "Western Cape",
                            Name = "Western Cape",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8450)
                        });
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppiers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f684b2b1-ec31-40d6-9693-c70c76860e45"),
                            CreatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8532),
                            IsActive = 1,
                            Name = "The Prepaid Company",
                            UpdatedDate = new DateTime(2024, 5, 23, 20, 16, 2, 318, DateTimeKind.Utc).AddTicks(8533),
                            VendorCode = "TPC"
                        });
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Product", b =>
                {
                    b.HasOne("DotNetCore.API.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using DotNetCore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCore.API.Migrations
{
    [DbContext(typeof(OnlineStoreDbContext))]
    [Migration("20240613200237_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3604540-6c24-4959-ae2e-8047b7d9f1fb"),
                            Code = "GP",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(567),
                            Description = "Gauteng Province",
                            Name = "Gauteng",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(568)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b0"),
                            Code = "KZN",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(570),
                            Description = "KwaZulu-Natal",
                            Name = "KwaZulu-Natal",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(571)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b1"),
                            Code = "EC",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(572),
                            Description = "Eastern Cape",
                            Name = "Eastern Cape",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(572)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b2"),
                            Code = "FS",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(574),
                            Description = "Free State",
                            Name = "Free State",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(574)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b3"),
                            Code = "LP",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(575),
                            Description = "Limpopo",
                            Name = "Limpopo",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(575)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b4"),
                            Code = "MP",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(577),
                            Description = "Mpumalanga",
                            Name = "Mpumalanga",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(577)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b5"),
                            Code = "NW",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(578),
                            Description = "North West",
                            Name = "North West",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(579)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b6"),
                            Code = "NC",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(580),
                            Description = "Northern Cape",
                            Name = "Northern Cape",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(580)
                        },
                        new
                        {
                            Id = new Guid("a083a8da-d9a1-4c2d-85e2-f6d1234a56b7"),
                            Code = "WC",
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(582),
                            Description = "Western Cape",
                            Name = "Western Cape",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(582)
                        });
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3a5f2d4-8e92-46c8-9232-f8de57f2c2af"),
                            CreatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(680),
                            IsActive = 1,
                            Name = "The Prepaid Company",
                            UpdatedDate = new DateTime(2024, 6, 13, 20, 2, 37, 687, DateTimeKind.Utc).AddTicks(681),
                            VendorCode = "TPC"
                        });
                });

            modelBuilder.Entity("DotNetCore.API.Models.Domain.Product", b =>
                {
                    b.HasOne("DotNetCore.API.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetCore.API.Models.Domain.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
